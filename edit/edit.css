/* ================================== */
/* 1. 全体レイアウトと基本設定 */
/* ================================== */

body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f9;
    /* スクロールを禁止し、100%のビューポート高を確保 */
    height: 100vh;
    overflow: hidden;
}

#app-container {
    display: flex;
    flex-direction: column; /* 常に縦並びで、どちらかを隠す */
    height: 100%;
    box-sizing: border-box;
    transition: all 0.3s ease; /* スムーズな切り替え */
}

.panel {
    flex: 1; /* 親コンテナの利用可能なスペースを占有 */
    border: 1px solid #ccc;
    box-sizing: border-box;
    overflow: hidden;
    padding: 0;
    /* 初期状態はどちらも画面半分 */
    height: 50%; 
    min-height: 0; 
}

/* ================================== */
/* 2. パネルヘッダーと共通ボタン */
/* ================================== */

.header {
    display: flex;
    align-items: center; /* 要素を垂直方向に中央揃え */
    padding: 0 10px; /* 左右にパディング */
    border-bottom: 2px solid #555;
    background-color: #333; /* エディタ側ヘッダーのデフォルト色 */
    height: 40px; /* ヘッダーの高さを固定 */
    gap: 10px; /* 要素間の間隔を追加 */
    position: relative; /* 子要素 (ハンバーガーメニュー) の absolute 配置の基点 */
}

.toggle-button {
    background: none;
    border: none;
    color: white; /* エディタ側デフォルト色 */
    font-size: 1.2em;
    cursor: pointer;
    padding: 5px;
    margin-left: 5px; 
    flex-shrink: 0;
}

/* ★ 操作ボタンの共通スタイル (エクスポート/インポートなど) */
.control-button {
    background-color: #555;
    color: white;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    border-radius: 4px;
    font-size: 14px;
    white-space: nowrap; 
    line-height: 1;
    display: flex; /* アイコンとテキストを縦方向中央に配置 */
    align-items: center;
    justify-content: center; /* 水平方向の中央揃え (新規調整) */
    flex-shrink: 0; 
}

.control-button i {
    margin-right: 5px;
}

.control-button:hover {
    background-color: #777;
}

/* インポート用ラベルの調整 (ボタンのスタイルを継承) */
.import-label {
    cursor: pointer;
}

/* ================================== */
/* 3. ファイルタブとメニュー（デスクトップ優先） */
/* ================================== */

/* 🍔 ハンバーガーボタン (デスクトップでは非表示) */
.file-menu-toggle {
    display: none; 
    order: -1;      /* header内の要素の左端に配置 */
    margin-right: 10px;
}

/* ファイルタブのコンテナ (デスクトップ用) */
.file-tabs-container {
    display: flex; /* デスクトップでは常に横並びで表示 */
    flex-grow: 0;
    flex-shrink: 1;
    overflow-x: auto;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
    align-items: center;
    position: static; /* デスクトップでは通常のフロー */
    padding: 0;
}

/* ファイルタブのリスト */
.tabs {
    display: flex;
    white-space: nowrap;
    align-items: center;
    height: 40px;
    margin-left: -10px; /* headerの左パディングを打ち消し、タブを左端に寄せる */
}

/* 個々のファイルタブボタン */
.tab-button {
    flex-shrink: 0; 
    padding: 10px 12px;
    border: none;
    background-color: #333;
    color: #ccc;
    cursor: pointer;
    font-size: 1em;
    margin-right: 1px;
    border-radius: 4px 4px 0 0;
    line-height: 1;
    height: 40px; 
    display: flex;
    align-items: center;
}

.tab-button.active {
    background-color: #555;
    color: white;
    font-weight: bold;
}

/* ファイル削除アイコン */
.delete-icon {
    color: #ff8888;
    margin-left: 5px;
    font-size: 0.8em;
    cursor: pointer;
}

/* ファイル追加ボタン */
.add-file-button {
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 10px 15px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 14px;
    cursor: pointer;
    margin-left: 5px;
    flex-shrink: 0;
    height: 40px;
    box-sizing: border-box;
}

/* ================================== */
/* 4. エディタパネル（コード入力エリア） */
/* ================================== */

.editor-panel {
    background-color: #333;
    color: #f0f0f0;
    display: flex;
    flex-direction: column;
}

/* ファイル名入力フィールド */
.filename-input {
    color: #00ffaa;
    font-weight: bold;
    font-size: 1.1em;
    padding: 5px 10px;
    border: 1px solid #555;
    background-color: #444;
    outline: none;
    flex-grow: 1; /* 利用可能なスペースを占有 */
    box-sizing: border-box;
    min-width: 100px;
}
.filename-input:disabled {
    opacity: 0.6;
}

/* 共通コード入力エリア (エディタ本体) */
#code-content {
    flex-grow: 1;
    height: calc(100% - 40px); /* ヘッダー高さを引いた残りの高さ */
    box-sizing: border-box;
}

/* 行番号とコード入力を保持するコンテナ */
.editor-container {
    display: flex; /* 横並びにする */
    height: 100%;
    width: 100%;
    padding: 10px 0 10px 10px; /* コードと行番号の両方にかかるパディング */
    box-sizing: border-box;
    overflow: hidden; 
    background-color: #222; /* HTMLのデフォルト背景色 */
    position: relative;
}

/* 行番号表示用の領域 */
.line-numbers {
    flex-shrink: 0;
    width: 30px; 
    background-color: #2b2b2b;
    color: #888;
    text-align: right;
    padding-right: 8px;
    line-height: 1.5; 
    font-size: 14px;
    font-family: 'Consolas', 'Courier New', monospace;
    overflow: hidden; 
    user-select: none; 
}

/* 実際のコード入力エリア */
#code-input {
    position: absolute;
    top: 10px;
    right: 0;
    width: calc(100% - 48px);
    height: calc(100% - 20px);
    padding: 0 10px 0 0; 
    border: none;
    resize: none;
    box-sizing: border-box;
    font-family: 'Consolas', 'Courier New', monospace;
    font-size: 14px;
    background-color: transparent; /* editor-containerで背景色指定 */
    color: #f0f0f0;
    caret-color: white;
    z-index: 1;
    outline: none;
    line-height: 1.5; 
    overflow-y: scroll; /* 縦スクロールを担当 */
    margin-left: 0px; /* 行番号との隙間を詰める */
}

/* ================================== */
/* 5. ファイルタイプごとの色識別 */
/* ================================== */

/* CSSファイルがアクティブな場合 */
.code-type-css .editor-container {
    background-color: #202b33; /* 濃い青みがかったグレー */
}
.code-type-css .line-numbers {
    background-color: #202b33;
    color: #79a6d2; /* 青系統の行番号 */
}

/* JSファイルがアクティブな場合 */
.code-type-js .editor-container {
    background-color: #332d20; /* 濃い黄色みがかったグレー */
}
.code-type-js .line-numbers {
    background-color: #332d20;
    color: #e5c07b; /* 黄色系統の行番号 */
}

/* ================================== */
/* 6. プレビューパネル */
/* ================================== */

.preview-panel {
    background-color: #fff;
}

.preview-panel .header {
    background-color: #f0f0f0;
    border-bottom: 1px solid #ccc;
    padding: 0 0px;
}

.preview-panel h2 {
    margin: 0;
    padding: 10px 0;
    font-size: 1.1em;
    color: #333;
    flex-grow: 1;
    white-space: nowrap; 
    overflow: hidden; 
    text-overflow: ellipsis; /* ... で省略表示 */
    max-width: calc(100% - 60px); /* ボタンの幅を考慮 */
}
/* プレビューパネル内の切り替えボタンの色調整 */
.preview-panel .toggle-button {
    color: #333;
}

#preview-iframe {
    width: 100%;
    height: calc(100% - 40px); /* ヘッダーの高さ考慮 */
    border: none;
    background-color: white;
}

/* ================================== */
/* 7. 全画面表示と補助機能 */
/* ================================== */

/* コード全画面表示モード (.view-editor) */
.view-editor .editor-panel {
    height: 100%; 
    flex: 1;
}
.view-editor .preview-panel {
    height: 0; 
    flex: 0; /* 非表示 */
}

/* プレビュー全画面表示モード (.view-preview) */
.view-preview .editor-panel {
    height: 0; 
    flex: 0; /* 非表示 */
}
.view-preview .preview-panel {
    height: 100%; 
    flex: 1;
}

/* ================================== */
/* 7. 検索ハイライトと全画面表示の機能CSS */
/* ================================== */

/* 検索結果を重ねて表示するレイヤーのスタイル */
#highlight-layer {
    position: absolute; 
    top: 10px;
    left: 48px;
    width: calc(100% - 48px);
    height: calc(100% - 20px);
    margin: 0;
    /* code-inputのパディングに合わせる */
    padding: 0 10px 0 0; 
    color: transparent;
    font-family: 'Consolas', 'Courier New', monospace;
    font-size: 14px; 
    line-height: 1.5; 
    
    white-space: pre-wrap;
    word-wrap: break-word;
    box-sizing: border-box;
    pointer-events: none; 
    overflow-y: scroll; 
    z-index: 2;
}

/* 一致した単語の共通スタイル */
.highlight-match {
    background-color: #f7ff00; /* 全ての一致箇所 */
    border-radius: 2px;
}

/* 現在選択中の単語のスタイル */
.current-match {
    background-color: #ffaa00; /* 現在地は目立つ色に */
    border: 1px solid #ff7700;
}



/* 右側のコントロールパネル (Undo/Redoなど) */
#control-panel-right {
    display: flex;
    flex-direction: column; 
    align-items: flex-end;
    position: absolute;
    top: 50px; /* ヘッダーの下に配置 */
    right: 5px;
    z-index: 50; 
    gap: 5px;
    padding: 5px;
    border-radius: 5px;
    background: rgba(40, 40, 40, 0.8);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);
}

/* プレビュー全画面表示時、Undo/Redoボタンを非表示にする */
#app-container.view-preview #control-panel-right {
    display: none;
}

/* ================================== */
/* 8. レスポンシブデザイン（モバイル対応） */
/* ================================== */

/* ---------------------------------- */
/* モバイル向けメディアクエリ (768px以下) */
/* ---------------------------------- */
@media (max-width: 768px) {
    /* 🍔 ハンバーガーボタンを表示 */
    .file-menu-toggle {
        display: block; 
    }

    /* ファイル名入力欄のスペースを調整 */
    .filename-input {
        flex-grow: 1; 
        margin-left: 10px;
    }
    
    /* ファイルタブコンテナを絶対配置にし、デフォルトで非表示 */
    .file-tabs-container {
        display: none; /* デフォルトで非表示 */
        position: absolute; 
        top: 40px; /* ヘッダーの高さ(40px)のすぐ下に配置 */
        left: 0;
        width: 100%;
        background-color: #333; 
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
        z-index: 100; 
        flex-direction: column; /* タブを縦に並べる */
        padding: 0;
    }

    /* JavaScriptでメニューが開いたときに適用されるクラス */
    .file-tabs-container.is-open {
        display: flex; 
        max-height: calc(100vh - 40px); /* ビューポート高からヘッダー高を引いた値 */
        overflow-y: auto; 
    }

    /* ファイルタブのリスト (縦並びに戻す) */
    .tabs {
        flex-direction: column;
        width: 100%;
        height: auto; 
        margin-left: 0; 
    }

    /* 個々のタブのスタイル調整 (フル幅) */
    .tab-button {
        width: 100%;
        margin-right: 0;
        margin-bottom: 1px; 
        border-radius: 0;
        justify-content: flex-start; /* 左寄せ */
        box-sizing: border-box;
        border-bottom: 1px solid #222;
        background-color: #444; 
        color: #ddd;
    }
    
    .tab-button.active {
        background-color: #555;
        color: white;
    }
}


/* ---------------------------------- */
/* モバイルフレンドリーな調整 (600px以下) */
/* ---------------------------------- */
@media (max-width: 600px) {
    #control-panel-right {
        top: 50px; 
        right: 0px;
        background: none;
        box-shadow: none;
    }
    /* Undo/Redo/Previewボタンのサイズを大きくしてタッチしやすいようにする */
    #control-panel-right .control-button {
        padding: 8px 12px; 
        font-size: 16px; 
    }
}

/* ---------------------------------- */
/* PCモードの調整 (601px以上) */
/* ---------------------------------- */
@media (min-width: 601px) {
    /* PCモードではハンバーガーメニューを非表示にする */
    #file-menu-toggle {
        display: none;
    }
}
     
        
        /* 🌟 [新規追加] タグショートカットパネルのスタイル */
        #tag-shortcut-panel {
            display: flex;
            flex-direction: column; /* タグボタンを縦に並べる */
            gap: 5px; /* タグボタン間の間隔 */
            margin-top: 10px; /* Undo/Redoボタンとの間にスペース */
            padding-top: 5px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        /* 🌟 [新規追加] タグボタンの固有スタイル */
        .tag-button {
            width: 40px; /* 幅を固定 */
            height: 40px; /* 高さを固定 */
            min-width: 0;
            padding: 0;
            font-size: 14px;
            font-weight: bold;
            color: #fff;
            background-color: #5c6bc0; /* 青系の色で識別しやすく */
            border: none;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        

        /* モバイルフレンドリーな調整 */
        @media (max-width: 600px) {
            #control-panel-right {
                top: 50px;
                right: 0px;
                background: none;
                box-shadow: none;
            }
            
        }

/* ====================================
   プレビュー切り替え機能のスタイル
==================================== */

/* 通常時: エディタとプレビューが横並び */
#code-area {
    width: 50%; 
    display: flex;
}
#preview-area {
    width: 50%;
    display: block; 
}

/* プレビューモード時 (.preview-active が #app-container に付与される) */
#app-container.preview-active #code-area {
    display: none; /* エディタを非表示 */
}
#app-container.preview-active #preview-area {
    width: 100%; /* プレビューを全幅表示 */
    display: block;
}

/* エディタモード時 (通常時と同じだが、念のため) */
#app-container:not(.preview-active) #code-area {
    display: flex;
}
#app-container:not(.preview-active) #preview-area {
    display: block;
}